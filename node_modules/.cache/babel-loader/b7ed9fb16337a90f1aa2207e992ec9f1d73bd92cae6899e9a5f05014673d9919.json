{"ast":null,"code":"var _jsxFileName = \"D:\\\\Besant\\\\REACT_app\\\\myapp\\\\src\\\\App.js\";\n// React js completely based in components\n// There are two types\n// 1.Class based components : Stateful components -> which have own state\n// oops based\n// 2.Functional components : stateless components\n// Hooks methods\n\n// import React, { useSyncExternalStore } from \"react\";\n\n// How to make components -> using JSX rules\n// 1.Function name / class name - first letter should be capital\n// 2.return key word\n// 3.Any one block element - div , main , section\n// 4.id = id , class = calssName\n// 5.Html attributes are camel case\n// eg : onclick - onclick\n//6.Every tag is open & close is mandatory ex : <br> </br> r <br/>\n// export component\n// export default component ----------------------------------------------------------------------------------------\n\n// import \"./index.css\"\n// const style={\n//     color:\"yellow\",\n//     backgroundColor:\"green\"\n// }\n\n// export function App(){\n//     return(\n//         <div className=\"a\">\n//             <h1 style={{color:\"red\",backgroundColor:'green'}}>React JS</h1>\n//             <p>This is my paragraph</p>\n//             <p>This para is too long</p>\n//             <button>Click</button>\n//         </div>\n//     )\n// }\n\n//  export default App; \n\n// export function App1(){\n//     return(\n//         <div>\n//             <h1 style={style}>App1 Components</h1>\n//         </div>\n//     )\n// }\n\n// import React from \"react\";\n// const style={\n//     backgroundColor:\"blue\"\n//  }\n// class App extends React.Component{\n//     render(){\n//         return(\n//             <div>\n//                 <h1 style={{color:\"red\"}}>Class based component</h1>\n//             </div>\n//         )\n//     }\n// }\n\n// export default App;\n\n//==============================================================================================================\n// DAY 2 (Compositon & Inheritance)\n\n// Compositon : combining one component & another component\n// it converts into new component [classes & function]\n\n// import React from \"react\";\n// import Data from \"./Data.js\"\n// function App(){\n//     return(\n//         <div>\n//             <h1>Compositon method</h1>\n//             <App1></App1>\n//             <App2></App2> \n//             <Data></Data>\n//         </div>\n//     )\n// }\n//  we can call App 1, 2 in App only or App2 can call in App1 also\n\n// function App1(){\n//     return(\n//         <div>\n//             <button>Read me</button>\n//         </div>\n//     )\n// }\n\n// function App2(){\n//     return(\n//         <div>\n//             <button>Click</button>\n//         </div>\n//     )\n// }\n// export default App;\n\n// Inheritance : one class is derived from another class [class component] only for \n// compostion method means we can have either parent inside child,only parent element can be call\n\n// import React from \"react\";\n// class App extends React.Component{\n//     render(){\n//         return(\n//             <div>\n//                 <h1>Class component</h1>\n//             </div>\n//         )\n//     }\n// }\n\n// class App1 extends App{\n//     render(){\n//         const parent=super.render() \n//         return(\n//             <div>\n//                 {parent}    \n//                 <h1>Parent component</h1>\n//             </div>\n//         )\n//     }\n// }\n\n// class App2 extends App1{\n//     render(){\n//         const parent = super.render()\n//         return(\n//             <div>\n//                 {parent}\n//                 <h1>Child component</h1>\n//             </div>\n//         )\n//     }\n// }\n// export default App2;\n\n//=> Props --> properties : pass the information from one component to another\n// declare within a curley bracket we can declare properties {}\n// props are immutable - we can't change\n// Destructuring : It is used to make multi line props to singel line props \n\n// function App(Props){\n//     let data=\"Hello\"\n//     let x=\"Good Morning\"\n//     return(\n//         <div>\n//             <h1>Functional component {data}</h1>\n//             <App1 value={data} send={x}/>\n//         </div>\n//     )\n// }\n// function App1(props){\n//     const {value,send}=props\n//     return(\n//         <div>\n//             <h1>Child component {value} and {send}</h1>\n//             <App2 data={value} y={send}/>\n//         </div>\n//     )\n// }\n// function App2(props){\n//     const {data,y} = props\n//     return(\n//         <div>\n//             <h1>Nth child component {props.data} {y}</h1>\n//         </div>\n//     )\n// }\n// export default App;\n\n// ======================================================================================================================================\n// DAY 3 => Props & prop-types (continueing Props)\n\n// function App({data,value,fname,city}){  //(OR) in arugument plaace instead of props we can pass directly properties name \n//     const {data,value,fname,city} = props  // Destructuring method\n//     return(\n//         <div>\n//             <h1>Parent component</h1>\n//             <p>{data}</p>\n//             <p>{value}</p>\n//             <p>{fname}</p>\n//             <p>{city}</p>\n//         </div>\n//     )\n// }\n\n// function Child(){\n//     let a = \"Good morning\"\n//     let b = \"Besant Technology\"\n//     return(\n//         <div>\n//             <h1>Child component </h1>\n//             <App data={a} value={b} fname={\"Ram \"} city={\"Banglore\"}/>\n//         </div>\n//     )\n// }\n// export default Child;\n\n//----------------------------------------------------------------------\n//Prop-Types from prop-types to install -> npm install prop-type\n\n// import React from \"react\";\n// import PropTypes from \"prop-types\"\n// class App extends React.Component{\n//     render(){\n//         const {Id,User,fname,city,Mobile} = this.props\n//         return(\n//             <div>\n//                 <h1> Parent component</h1>\n//                 <p> ID : {Id}</p>\n//                 <p> USER : {User}</p>\n//                 <p> Firstname : {fname}</p>\n//                 <p> City : {city}</p>\n//                 <p> Mobile : {Mobile}</p>\n//             </div>\n//         )\n//     }\n// }\n\n//Data types are validated\n// App.propTypes={\n//     Id : PropTypes.number,\n//     User : PropTypes.array,\n//     Firstname : PropTypes.string,\n//     city : PropTypes.string,\n//     Mobile : PropTypes.number\n// }\n// App.defaultProps={\n//     Id : 22,\n//     User : [\"sdf54\"],\n//     fname : \"Ram\",\n//     city : \"Banglore\",\n//     Mobile : 9857589586\n// }\n\n// export default App;\n\n//====================================================================================================================================\n// DAY 4\n// States --> pass the information in the same component \n// delclre -- {}\n// states are mutable object \n// Two types of states -> these two method apply for only classes\n// 1.Constructor method  --> is a function used to create the instance of object\n// 2.Without constructor method \n// import React from \"react\"\n// class App extends React.Component{\n//     // constructor(props){  using constructor\n//         // super(props)  // used to call the constructor parameters \n//     state={   //this is without constructor if we want to use constructor means we have to use this.state\n//             id:1,\n//             name:\"vijay\",\n//             mobile:98765432,\n//             count:0,\n//             value:\"\"\n//         }\n//     // }\n// change=()=>{\n//     this.setState({\n//         id:2,\n//         name:\"Raghav\",\n//         mobile:123\n//     })\n//   }\n\n//   inc=()=>{\n//     this.setState({\n//         count:this.state.count + 1\n//     })\n//   }\n//   dec=()=>{\n//     this.setState({\n//         count:this.state.count - 1\n//     })\n//   }\n//   getData=(e)=>{\n//     this.setState({\n//         value:e.target.value\n//     })\n//   }\n\n// //   onClick=\"change()\"  => In JS\n// //   onClick={this.change} - class based component  => In Function\n// //   onClick={change}  -function  => In Class\n\n//     render(){\n//         return(\n//             <div>\n//            <h1>Constuctor method</h1>\n//            <p>\n//             ID:{this.state.id}<br/>\n//             Name:{this.state.name}<br/>\n//             Mobile:{this.state.mobile}\n//            </p>\n//           <button onClick={this.change}>Update</button>\n//           <br/><br/>\n//           <h4>Count:{this.state.count}</h4>\n//           <button onClick={this.inc}>Inc</button>\n//           <button onClick={this.dec}>Dec</button>\n//           <br/><br/>\n//      <input type=\"text\" onChange={this.getData}/>\n//      <p>current User input values: {this.state.value}</p>\n//            <App1 count={this.state.count} value={this.state.id} name={this.state.name} mobile={this.state.mobile}/>\n//             </div>\n//         )\n//     }\n// }\n\n// class App1 extends React.Component{\n//     render(){\n//         return(\n//             <div>\n//                 <h2>Child Component</h2>\n//                 <h3>{this.props.count}</h3>\n//                 <p>\n//             ID:{this.props.value}<br/>\n//             Name:{this.props.name}<br/>\n//             Mobile:{this.props.mobile}\n//            </p>\n//             </div>\n//         )\n//     }\n// }\n\n// export default App;\n// -----------------------------------------------------------------------\n// Assignment\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(event) {\n    this.setState({\n      username: event.target.value\n    });\n  }\n  render() {\n    const {\n      username\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login Form!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User name : \", \" \", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          pattern: \".{5,}\",\n          title: \"username must be at least 5 characters long\",\n          value: username,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Email    :   \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Password :   \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Confirm Password : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          title: \"Confirm Password must be match with password\",\n          value: password,\n          onChange: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","Component","constructor","props","state","username","handleChange","bind","event","setState","target","value","render","children","fileName","_jsxFileName","lineNumber","columnNumber","type","pattern","title","onChange","password"],"sources":["D:/Besant/REACT_app/myapp/src/App.js"],"sourcesContent":["// React js completely based in components\r\n// There are two types\r\n// 1.Class based components : Stateful components -> which have own state\r\n    // oops based\r\n// 2.Functional components : stateless components\r\n    // Hooks methods\r\n\r\n// import React, { useSyncExternalStore } from \"react\";\r\n\r\n// How to make components -> using JSX rules\r\n// 1.Function name / class name - first letter should be capital\r\n// 2.return key word\r\n// 3.Any one block element - div , main , section\r\n// 4.id = id , class = calssName\r\n// 5.Html attributes are camel case\r\n    // eg : onclick - onclick\r\n//6.Every tag is open & close is mandatory ex : <br> </br> r <br/>\r\n// export component\r\n// export default component ----------------------------------------------------------------------------------------\r\n\r\n\r\n// import \"./index.css\"\r\n// const style={\r\n//     color:\"yellow\",\r\n//     backgroundColor:\"green\"\r\n// }\r\n\r\n// export function App(){\r\n//     return(\r\n//         <div className=\"a\">\r\n//             <h1 style={{color:\"red\",backgroundColor:'green'}}>React JS</h1>\r\n//             <p>This is my paragraph</p>\r\n//             <p>This para is too long</p>\r\n//             <button>Click</button>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n//  export default App; \r\n\r\n\r\n// export function App1(){\r\n//     return(\r\n//         <div>\r\n//             <h1 style={style}>App1 Components</h1>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// import React from \"react\";\r\n// const style={\r\n//     backgroundColor:\"blue\"\r\n//  }\r\n// class App extends React.Component{\r\n//     render(){\r\n//         return(\r\n//             <div>\r\n//                 <h1 style={{color:\"red\"}}>Class based component</h1>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default App;\r\n\r\n//==============================================================================================================\r\n// DAY 2 (Compositon & Inheritance)\r\n\r\n// Compositon : combining one component & another component\r\n        // it converts into new component [classes & function]\r\n\r\n// import React from \"react\";\r\n// import Data from \"./Data.js\"\r\n// function App(){\r\n//     return(\r\n//         <div>\r\n//             <h1>Compositon method</h1>\r\n//             <App1></App1>\r\n//             <App2></App2> \r\n//             <Data></Data>\r\n//         </div>\r\n//     )\r\n// }\r\n//  we can call App 1, 2 in App only or App2 can call in App1 also\r\n\r\n// function App1(){\r\n//     return(\r\n//         <div>\r\n//             <button>Read me</button>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// function App2(){\r\n//     return(\r\n//         <div>\r\n//             <button>Click</button>\r\n//         </div>\r\n//     )\r\n// }\r\n// export default App;\r\n\r\n// Inheritance : one class is derived from another class [class component] only for \r\n// compostion method means we can have either parent inside child,only parent element can be call\r\n\r\n// import React from \"react\";\r\n// class App extends React.Component{\r\n//     render(){\r\n//         return(\r\n//             <div>\r\n//                 <h1>Class component</h1>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// class App1 extends App{\r\n//     render(){\r\n//         const parent=super.render() \r\n//         return(\r\n//             <div>\r\n//                 {parent}    \r\n//                 <h1>Parent component</h1>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// class App2 extends App1{\r\n//     render(){\r\n//         const parent = super.render()\r\n//         return(\r\n//             <div>\r\n//                 {parent}\r\n//                 <h1>Child component</h1>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n// export default App2;\r\n\r\n//=> Props --> properties : pass the information from one component to another\r\n// declare within a curley bracket we can declare properties {}\r\n// props are immutable - we can't change\r\n// Destructuring : It is used to make multi line props to singel line props \r\n\r\n// function App(Props){\r\n//     let data=\"Hello\"\r\n//     let x=\"Good Morning\"\r\n//     return(\r\n//         <div>\r\n//             <h1>Functional component {data}</h1>\r\n//             <App1 value={data} send={x}/>\r\n//         </div>\r\n//     )\r\n// }\r\n// function App1(props){\r\n//     const {value,send}=props\r\n//     return(\r\n//         <div>\r\n//             <h1>Child component {value} and {send}</h1>\r\n//             <App2 data={value} y={send}/>\r\n//         </div>\r\n//     )\r\n// }\r\n// function App2(props){\r\n//     const {data,y} = props\r\n//     return(\r\n//         <div>\r\n//             <h1>Nth child component {props.data} {y}</h1>\r\n//         </div>\r\n//     )\r\n// }\r\n// export default App;\r\n\r\n// ======================================================================================================================================\r\n// DAY 3 => Props & prop-types (continueing Props)\r\n\r\n// function App({data,value,fname,city}){  //(OR) in arugument plaace instead of props we can pass directly properties name \r\n//     const {data,value,fname,city} = props  // Destructuring method\r\n//     return(\r\n//         <div>\r\n//             <h1>Parent component</h1>\r\n//             <p>{data}</p>\r\n//             <p>{value}</p>\r\n//             <p>{fname}</p>\r\n//             <p>{city}</p>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// function Child(){\r\n//     let a = \"Good morning\"\r\n//     let b = \"Besant Technology\"\r\n//     return(\r\n//         <div>\r\n//             <h1>Child component </h1>\r\n//             <App data={a} value={b} fname={\"Ram \"} city={\"Banglore\"}/>\r\n//         </div>\r\n//     )\r\n// }\r\n// export default Child;\r\n\r\n//----------------------------------------------------------------------\r\n//Prop-Types from prop-types to install -> npm install prop-type\r\n\r\n// import React from \"react\";\r\n// import PropTypes from \"prop-types\"\r\n// class App extends React.Component{\r\n//     render(){\r\n//         const {Id,User,fname,city,Mobile} = this.props\r\n//         return(\r\n//             <div>\r\n//                 <h1> Parent component</h1>\r\n//                 <p> ID : {Id}</p>\r\n//                 <p> USER : {User}</p>\r\n//                 <p> Firstname : {fname}</p>\r\n//                 <p> City : {city}</p>\r\n//                 <p> Mobile : {Mobile}</p>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n\r\n\r\n//Data types are validated\r\n// App.propTypes={\r\n//     Id : PropTypes.number,\r\n//     User : PropTypes.array,\r\n//     Firstname : PropTypes.string,\r\n//     city : PropTypes.string,\r\n//     Mobile : PropTypes.number\r\n// }\r\n// App.defaultProps={\r\n//     Id : 22,\r\n//     User : [\"sdf54\"],\r\n//     fname : \"Ram\",\r\n//     city : \"Banglore\",\r\n//     Mobile : 9857589586\r\n// }\r\n\r\n// export default App;\r\n\r\n//====================================================================================================================================\r\n// DAY 4\r\n// States --> pass the information in the same component \r\n// delclre -- {}\r\n// states are mutable object \r\n// Two types of states -> these two method apply for only classes\r\n// 1.Constructor method  --> is a function used to create the instance of object\r\n// 2.Without constructor method \r\n// import React from \"react\"\r\n// class App extends React.Component{\r\n//     // constructor(props){  using constructor\r\n//         // super(props)  // used to call the constructor parameters \r\n//     state={   //this is without constructor if we want to use constructor means we have to use this.state\r\n//             id:1,\r\n//             name:\"vijay\",\r\n//             mobile:98765432,\r\n//             count:0,\r\n//             value:\"\"\r\n//         }\r\n//     // }\r\n// change=()=>{\r\n//     this.setState({\r\n//         id:2,\r\n//         name:\"Raghav\",\r\n//         mobile:123\r\n//     })\r\n//   }\r\n\r\n//   inc=()=>{\r\n//     this.setState({\r\n//         count:this.state.count + 1\r\n//     })\r\n//   }\r\n//   dec=()=>{\r\n//     this.setState({\r\n//         count:this.state.count - 1\r\n//     })\r\n//   }\r\n//   getData=(e)=>{\r\n//     this.setState({\r\n//         value:e.target.value\r\n//     })\r\n//   }\r\n\r\n// //   onClick=\"change()\"  => In JS\r\n// //   onClick={this.change} - class based component  => In Function\r\n// //   onClick={change}  -function  => In Class\r\n  \r\n//     render(){\r\n//         return(\r\n//             <div>\r\n//            <h1>Constuctor method</h1>\r\n//            <p>\r\n//             ID:{this.state.id}<br/>\r\n//             Name:{this.state.name}<br/>\r\n//             Mobile:{this.state.mobile}\r\n//            </p>\r\n//           <button onClick={this.change}>Update</button>\r\n//           <br/><br/>\r\n//           <h4>Count:{this.state.count}</h4>\r\n//           <button onClick={this.inc}>Inc</button>\r\n//           <button onClick={this.dec}>Dec</button>\r\n//           <br/><br/>\r\n//      <input type=\"text\" onChange={this.getData}/>\r\n//      <p>current User input values: {this.state.value}</p>\r\n//            <App1 count={this.state.count} value={this.state.id} name={this.state.name} mobile={this.state.mobile}/>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n\r\n// class App1 extends React.Component{\r\n//     render(){\r\n//         return(\r\n//             <div>\r\n//                 <h2>Child Component</h2>\r\n//                 <h3>{this.props.count}</h3>\r\n//                 <p>\r\n//             ID:{this.props.value}<br/>\r\n//             Name:{this.props.name}<br/>\r\n//             Mobile:{this.props.mobile}\r\n//            </p>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default App;\r\n// -----------------------------------------------------------------------\r\n// Assignment\r\nimport React from \"react\";\r\n\r\nclass App extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n             username : \"\",\r\n             \r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({ username : event.target .value});\r\n    }\r\n\r\n    render(){\r\n        const {username} = this.state;\r\n\r\n        return(\r\n            <div>\r\n                <h1>Login Form!</h1>\r\n                <p>User name : {\" \"} <input type=\"text\" pattern=\".{5,}\" title=\"username must be at least 5 characters long\" value={username} onChange={this.handleChange} /></p>\r\n                <p> Email    :   <input type=\"email\"/></p>\r\n                <p>Password :   <input type=\"password\" /></p>\r\n                <p>Confirm Password : <input type=\"password\" title=\"Confirm Password must be match with password\" value={password} onChange={this}/></p>\r\n                <button>SUBMIT</button>\r\n                \r\n              \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App"],"mappings":";AAAA;AACA;AACA;AACI;AACJ;AACI;;AAEJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACQ;;AAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}