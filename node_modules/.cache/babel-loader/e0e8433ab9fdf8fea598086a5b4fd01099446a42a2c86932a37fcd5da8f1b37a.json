{"ast":null,"code":"var _jsxFileName = \"D:\\\\Besant\\\\REACT_app\\\\myapp\\\\src\\\\StuLogin.js\";\n// import React from \"react\";\n// // import StuLogin from \"./StuLogin\";\n\n// class StuLogin extends React.Component{\n//     constructor(){\n//         super()\n//         this.state={\n//             user:\"\",\n//             email:\"\",\n//             pswd:\"\"\n//         }\n//     }\n//     updateUser=(e)=>{\n//         console.log(e.target.value)\n//         this.setState({\n//             user:e.target.value\n//         })\n//     }\n//     updateEmail=(e)=>{\n//         this.setState({\n//             email:e.target.value\n//         })\n//     }\n//     updatePassword=(e)=>{\n//         this.setState({\n//             pswd:e.target.value\n//         })\n//     }\n//     submitForm=()=>{\n//         let x=localStorage.getItem(\"user\")\n//         let y=localStorage.getItem(\"email\")\n//         let z=localStorage.getItem(\"password\")\n//         if(this.state.user !== x  ||this.state.email !== y || this.state.pswd !== z ){\n//             alert(\"check the credentials..\")\n//         }\n//         else{\n//             alert(\"logged in!!.\")\n//         }\n//     }\n//     render(){\n//         return(\n//             <div>\n//                 <h2>Login</h2>\n//                 <form onSubmit={this.submitForm}>\n//                 <label>Username:</label>\n//                     <input value={this.state.user} type=\"text\" required onChange={this.updateUser}/>\n//                     <br/><br/>\n//                     <label>Email:</label>\n//                     <input value={this.state.email} type=\"email\" required onChange={this.updateEmail}/>\n//                     <br/><br/>\n//                     <label>Password:</label>\n//                     <input value={this.state.pswd} required onChange={this.updatePassword} type=\"password\"/>\n//                     <br/><br/>\n//                     <input type=\"submit\" value=\"Login\"/>\n\n//                 </form>\n//             </div>\n//         )\n//     }\n// }\n// export default StuLogin;\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass StuLogin extends React.Component {\n  constructor() {\n    super();\n    this.updateUser = e => {\n      this.setState({\n        user: e.target.value\n      });\n    };\n    this.updateEmail = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n    this.updatePassword = e => {\n      this.setState({\n        pswd: e.target.value\n      });\n    };\n    this.submitForm = () => {\n      // Assuming the passwords are hashed and stored in localStorage\n      let hashedPassword = localStorage.getItem(\"password\"); // Get hashed password from storage\n\n      // You can use a library like bcrypt.js to compare the hashed password\n      // Here, we are simply comparing the plain text password with the stored hashed password\n      if (this.state.pswd !== hashedPassword) {\n        alert(\"Invalid credentials. Please check your username, email, and password.\");\n      } else {\n        alert(\"Logged in successfully!\");\n      }\n    };\n    this.state = {\n      user: \"\",\n      email: \"\",\n      pswd: \"\"\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.submitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.user,\n          type: \"text\",\n          required: true,\n          onChange: this.updateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.email,\n          type: \"email\",\n          required: true,\n          onChange: this.updateEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.pswd,\n          required: true,\n          onChange: this.updatePassword,\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default StuLogin;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","StuLogin","Component","constructor","updateUser","e","setState","user","target","value","updateEmail","email","updatePassword","pswd","submitForm","hashedPassword","localStorage","getItem","state","alert","render","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","required","onChange"],"sources":["D:/Besant/REACT_app/myapp/src/StuLogin.js"],"sourcesContent":["// import React from \"react\";\r\n// // import StuLogin from \"./StuLogin\";\r\n\r\n// class StuLogin extends React.Component{\r\n//     constructor(){\r\n//         super()\r\n//         this.state={\r\n//             user:\"\",\r\n//             email:\"\",\r\n//             pswd:\"\"\r\n//         }\r\n//     }\r\n//     updateUser=(e)=>{\r\n//         console.log(e.target.value)\r\n//         this.setState({\r\n//             user:e.target.value\r\n//         })\r\n//     }\r\n//     updateEmail=(e)=>{\r\n//         this.setState({\r\n//             email:e.target.value\r\n//         })\r\n//     }\r\n//     updatePassword=(e)=>{\r\n//         this.setState({\r\n//             pswd:e.target.value\r\n//         })\r\n//     }\r\n//     submitForm=()=>{\r\n//         let x=localStorage.getItem(\"user\")\r\n//         let y=localStorage.getItem(\"email\")\r\n//         let z=localStorage.getItem(\"password\")\r\n//         if(this.state.user !== x  ||this.state.email !== y || this.state.pswd !== z ){\r\n//             alert(\"check the credentials..\")\r\n//         }\r\n//         else{\r\n//             alert(\"logged in!!.\")\r\n//         }\r\n//     }\r\n//     render(){\r\n//         return(\r\n//             <div>\r\n//                 <h2>Login</h2>\r\n//                 <form onSubmit={this.submitForm}>\r\n//                 <label>Username:</label>\r\n//                     <input value={this.state.user} type=\"text\" required onChange={this.updateUser}/>\r\n//                     <br/><br/>\r\n//                     <label>Email:</label>\r\n//                     <input value={this.state.email} type=\"email\" required onChange={this.updateEmail}/>\r\n//                     <br/><br/>\r\n//                     <label>Password:</label>\r\n//                     <input value={this.state.pswd} required onChange={this.updatePassword} type=\"password\"/>\r\n//                     <br/><br/>\r\n//                     <input type=\"submit\" value=\"Login\"/>\r\n\r\n//                 </form>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n// export default StuLogin;\r\n\r\n\r\nimport React from \"react\";\r\n\r\nclass StuLogin extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      user: \"\",\r\n      email: \"\",\r\n      pswd: \"\"\r\n    };\r\n  }\r\n\r\n  updateUser = (e) => {\r\n    this.setState({\r\n      user: e.target.value\r\n    });\r\n  };\r\n\r\n  updateEmail = (e) => {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  };\r\n\r\n  updatePassword = (e) => {\r\n    this.setState({\r\n      pswd: e.target.value\r\n    });\r\n  };\r\n\r\n  submitForm = () => {\r\n    // Assuming the passwords are hashed and stored in localStorage\r\n    let hashedPassword = localStorage.getItem(\"password\"); // Get hashed password from storage\r\n\r\n    // You can use a library like bcrypt.js to compare the hashed password\r\n    // Here, we are simply comparing the plain text password with the stored hashed password\r\n    if (this.state.pswd !== hashedPassword) {\r\n      alert(\"Invalid credentials. Please check your username, email, and password.\");\r\n    } else {\r\n      alert(\"Logged in successfully!\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Login</h2>\r\n        <form onSubmit={this.submitForm}>\r\n          <label>Username:</label>\r\n          <input value={this.state.user} type=\"text\" required onChange={this.updateUser} />\r\n          <br/><br/>\r\n          <label>Email:</label>\r\n          <input value={this.state.email} type=\"email\" required onChange={this.updateEmail} />\r\n          <br/><br/>\r\n          <label>Password:</label>\r\n          <input value={this.state.pswd} required onChange={this.updatePassword} type=\"password\" />\r\n          <br/><br/>\r\n          <input type=\"submit\" value=\"Login\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StuLogin;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}